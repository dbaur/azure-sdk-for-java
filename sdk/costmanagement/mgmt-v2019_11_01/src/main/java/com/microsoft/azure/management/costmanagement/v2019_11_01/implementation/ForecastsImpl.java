/**
 * Copyright (c) Microsoft Corporation. All rights reserved. Licensed under the MIT License. See License.txt in the
 * project root for license information.
 * <p>
 * Code generated by Microsoft (R) AutoRest Code Generator. abc
 */

package com.microsoft.azure.management.costmanagement.v2019_11_01.implementation;

import com.microsoft.azure.arm.model.implementation.WrapperImpl;
import com.microsoft.azure.management.costmanagement.v2019_11_01.ForecastDefinition;
import com.microsoft.azure.management.costmanagement.v2019_11_01.Forecasts;
import com.microsoft.azure.management.costmanagement.v2019_11_01.QueryDefinition;
import com.microsoft.azure.management.costmanagement.v2019_11_01.QueryResult;
import com.microsoft.azure.management.costmanagement.v2019_11_01.Querys;
import rx.Observable;
import rx.functions.Func1;

class ForecastsImpl extends WrapperImpl<ForecastsInner> implements Forecasts {

    private final CostManagementManager manager;

    ForecastsImpl(CostManagementManager manager) {
        super(manager.inner().forecasts());
        this.manager = manager;
    }

    public CostManagementManager manager() {
        return this.manager;
    }

    @Override
    public Observable<QueryResult> forecastsAsync(String scope, ForecastDefinition parameters) {
        ForecastsInner client = this.inner();
        return client.usageAsync(scope, parameters)
            .map(new Func1<QueryResultInner, QueryResult>() {
                @Override
                public QueryResult call(QueryResultInner inner) {
                    return new QueryResultImpl(inner, manager());
                }
            });
    }

    @Override
    public Observable<QueryResult> forecastsNextAsync(String url,
        ForecastDefinition parameters) {
        ForecastsInner client = this.inner();
        return client.usageNextAsync(url, parameters)
            .map(new Func1<QueryResultInner, QueryResult>() {
                @Override
                public QueryResult call(QueryResultInner inner) {
                    return new QueryResultImpl(inner, manager());
                }
            });
    }

}
